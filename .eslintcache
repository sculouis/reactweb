[{"/app/src/index.js":"1","/app/src/App.js":"2","/app/src/reportWebVitals.js":"3"},{"size":500,"mtime":1612317735887,"results":"4","hashOfConfig":"5"},{"size":729,"mtime":1612343883771,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1612317735887,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1avnxsh",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/app/src/index.js",[],["16","17"],"/app/src/App.js",["18"],"import logo from './logo.svg';\nimport './App.css';\nimport {useEffect} from \"react\"\n\nfunction App() {\n  useEffect(async () => {\n    var response = await fetch(\"http://localhost:5000/api/TodoItems\");\n    var data = await response.json();\n    console.log(data);\n  },[]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          歡迎進來\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/app/src/reportWebVitals.js",[],{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":6,"column":13,"nodeType":"25","endLine":10,"endColumn":4},"no-native-reassign",["26"],"no-negated-in-lhs",["27"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]